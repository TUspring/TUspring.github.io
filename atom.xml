<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tuspring的博客</title>
  <icon>https://www.gravatar.com/avatar/388ac37e32efff72ac8f99c3bc96eda2</icon>
  <subtitle>您好，世界！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//tuspring.com/"/>
  <updated>2018-04-01T13:18:11.692Z</updated>
  <id>//tuspring.com/</id>
  
  <author>
    <name>Tuspring</name>
    <email>tuspring6@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅谈前端面试那些事</title>
    <link href="//tuspring.com/2018/03/30/web-an-oral-quiz/"/>
    <id>//tuspring.com/2018/03/30/web-an-oral-quiz/</id>
    <published>2018-03-30T15:40:00.000Z</published>
    <updated>2018-04-01T13:18:11.692Z</updated>
    
    <content type="html"><![CDATA[<h6 id="知识点汇总"><a href="#知识点汇总" class="headerlink" title="知识点汇总"></a>知识点汇总</h6><blockquote><p>1.HTML</p></blockquote><ul><li>HTML5新特性，语义化</li><li>浏览器的标准模式和怪异模式</li><li>xhtml和html的区别</li><li>使用data-的好处</li><li>meta标签</li><li>canvas</li><li>HTML废弃的标签</li><li>IE6 bug，和一些定位写法</li><li>css js放置位置和原因</li><li>什么是渐进式渲染</li><li>html模板语言</li><li>meta viewport原理</li></ul><a id="more"></a><blockquote><p>2.CSS</p></blockquote><ul><li>盒模型，box-sizing</li><li>CSS3新特性，伪类，伪元素，锚伪类</li><li>CSS实现隐藏页面的方式</li><li>如何实现水平居中和垂直居中。</li><li>说说position，display</li><li>请解释*{box-sizing:border-box;}的作用，并说明使用它的好处</li><li>浮动元素引起的问题和解决办法？绝对定位和相对定位，元素浮动后的display值</li><li>link和@import引入css的区别</li><li>解释一下css3的flexbox，以及适用场景</li><li>inline和inline-block的区别</li><li>哪些是块级元素那些是行级元素，各有什么特点</li><li>grid布局</li><li>table布局的作用</li><li>实现两栏布局有哪些方法？</li><li>css dpi</li><li>你知道attribute和property的区别么</li><li>css布局问题？css实现三列布局怎么做？如果中间是自适应又怎么做？</li><li>流式布局如何实现，响应式布局如何实现</li><li>移动端布局方案</li><li>实现三栏布局（圣杯布局，双飞翼布局，flex布局）</li><li>清除浮动的原理</li><li>overflow:hidden有什么缺点？</li><li>padding百分比是相对于父级宽度还是自身的宽度</li><li>css3动画，transition和animation的区别，animation的属性，加速度，重力的模拟实现</li><li>CSS 3 如何实现旋转图片（transform: rotate）</li><li>sass less</li><li>对移动端开发了解多少？（响应式设计、Zepto；@media、viewport、JavaScript 正则表达式判断平台。）</li><li>什么是bfc，如何创建bfc？解决什么问题？</li><li>CSS中的长度单位（px,pt,rem,em,ex,vw,vh,vh,vmin,vmax）</li><li>CSS 选择器的优先级是怎样的？</li><li>雪碧图</li><li>svg</li><li>媒体查询的原理是什么？</li><li>CSS 的加载是异步的吗？表现在什么地方？</li><li>常遇到的浏览器兼容性问题有哪些？常用的hack的技巧</li><li>外边距合并</li><li>解释一下“::before”和“:after”中的双冒号和单冒号的区别</li></ul><blockquote><p>3.JS</p></blockquote><ul><li>js的基本类型有哪些？引用类型有哪些？null和undefined的区别。</li><li>如何判断一个变量是Array类型？如何判断一个变量是Number类型？（都不止一种）</li><li>Object是引用类型嘛？引用类型和基本类型有什么区别？哪个是存在堆哪一个是存在栈上面的？</li><li>JS常见的dom操作api</li><li>解释一下事件冒泡和事件捕获</li><li>事件委托（手写例子），事件冒泡和捕获，如何阻止冒泡？如何组织默认事件？</li><li>对闭包的理解？什么时候构成闭包？闭包的实现方法？闭包的优缺点？</li><li>this有哪些使用场景？跟C,Java中的this有什么区别？如何改变this的值？</li><li>call，apply，bind</li><li>显示原型和隐式原型，手绘原型链，原型链是什么？为什么要有原型链</li><li>创建对象的多种方式</li><li>实现继承的多种方式和优缺点</li><li>new 一个对象具体做了什么</li><li>手写Ajax，XMLHttpRequest</li><li>变量提升</li><li>举例说明一个匿名函数的典型用例</li><li>指出JS的宿主对象和原生对象的区别，为什么扩展JS内置对象不是好的做法？有哪些内置对象和内置函数？</li><li>attribute和property的区别</li><li>document load和document DOMContentLoaded两个事件的区别</li><li>=== 和 == , [] === [], undefined === undefined,[] == [], undefined == undefined</li><li>typeof能够得到哪些值</li><li>什么是“use strict”,好处和坏处</li><li>函数的作用域是什么？js 的作用域有几种？</li><li>JS如何实现重载和多态</li><li>常用的数组api，字符串api</li><li>原生事件绑定（跨浏览器），dom0和dom2的区别？</li><li>给定一个元素获取它相对于视图窗口的坐标</li><li>如何实现图片滚动懒加载</li><li>js 的字符串类型有哪些方法？ 正则表达式的函数怎么使用？</li><li>深拷贝</li><li>编写一个通用的事件监听函数</li><li>web端cookie的设置和获取</li><li>setTimeout和promise的执行顺序</li><li>JavaScript 的事件流模型都有什么？</li><li>navigator对象，location和history</li><li>js的垃圾回收机制</li><li>内存泄漏的原因和场景</li><li>DOM事件的绑定的几种方式</li><li>DOM事件中target和currentTarget的区别</li><li>typeof 和 instanceof 区别，instanceof原理</li><li>js动画和css3动画比较</li><li>JavaScript 倒计时（setTimeout）</li><li>js处理异常</li><li>js的设计模式知道那些</li><li>轮播图的实现，以及轮播图组件开发，轮播10000张图片过程</li><li>websocket的工作原理和机制。</li><li>手指点击可以触控的屏幕时，是什么事件？</li><li>什么是函数柯里化？以及说一下JS的API有哪些应用到了函数柯里化的实现？(函数柯里化一些了解，以及在函数式编程的应用，最后说了一下JS中bind函数和数组的reduce方法用到了函数柯里化。)</li><li>JS代码调试</li></ul><blockquote><p>4.ES6</p></blockquote><ul><li>谈一谈 promise</li><li>所有的 ES6 特性你都知道吗？如果遇到一个东西不知道是 ES6 还是 ES5, 你该怎么区分它</li><li>es6的继承和es5的继承有什么区别</li><li>promise封装ajax</li><li>let const的优点</li><li>es6 generator 是什么，async/await 实现原理</li><li>ES6和node的commonjs模块化规范区别</li><li>箭头函数，以及它的this</li></ul><blockquote><p>5.计算机网络</p></blockquote><ul><li>HTTP协议头含有哪些重要的部分，HTTP状态码</li><li>网络url输入到输出怎么做？</li><li>性能优化为什么要减少 HTTP 访问次数？</li><li>Http请求的过程与原理</li><li>https（对是https）有几次握手和挥手？https的原理。</li><li>http有几次挥手和握手？TLS的中文名？TLS在哪一网络层？</li><li>TCP连接的特点，TCP连接如何保证安全可靠的？</li><li>为什么TCP连接需要三次握手，两次不可以吗，为什么</li><li>为什么tcp要三次握手四次挥手？</li><li>tcp的三次握手和四次挥手画图（当场画写ack 和 seq的值）？</li><li>tcp与udp的区别</li><li>get和post的区别？什么情况下用到？</li><li>http2 与http1 的区别？</li><li>websocket</li><li>什么是tcp流，什么是http流</li><li>babel是如何将es6代码编译成es5的</li><li>http2的持久连接和管线化</li><li>域名解析时是tcp还是udp</li><li>域名发散和域名收敛</li><li>Post一个file的时候file放在哪的？</li><li>HTTP Response的Header里面都有些啥？</li></ul><blockquote><p>6.浏览器相关</p></blockquote><ul><li>跨域，为什么JS会对跨域做出限制</li><li>前端安全：xss，csrf…</li><li>浏览器怎么加载页面的？script脚本阻塞有什么解决方法？defer和async的区别？</li><li>浏览器强缓存和协商缓存</li><li>浏览器的全局变量有哪些</li><li>浏览器同一时间能够从一个域名下载多少资源</li><li>按需加载，不同页面的元素判断标准</li><li>web存储、cookies、localstroge等的使用和区别</li><li>浏览器的内核</li><li>如何实现缓存机制？（从200缓存，到cache到etag再到）</li><li>说一下200和304的理解和区别</li><li>什么是预加载、懒加载</li><li>一个 XMLHttpRequest 实例有多少种状态？</li><li>dns解析原理，输入网址后如何查找服务器</li><li>服务器如何知道你？</li><li>浏览器渲染过程</li><li>ie的某些兼容性问题</li><li>session</li><li>拖拽实现</li><li>拆解url的各部分</li></ul><blockquote><p>7.工程化</p></blockquote><ul><li>对webpack,gulp，grunt等有没有了解?对比。</li><li>webpack的入口文件怎么配置，多个入口怎么分割。</li><li>webpack的loader和plugins的区别</li><li>gulp的具体使用。</li><li>前端工程化的理解、如何自己实现一个文件打包，比如一个JS文件里同时又ES5 和ES6写的代码，如何编译兼容他们</li></ul><blockquote><p>8.模块化</p></blockquote><ul><li>对AMD,CMD,CommonJS有没有了解?</li><li>为什么要模块化？不用的时候和用RequireJs的时候代码大概怎么写？</li><li>说说有哪些模块化的库，有了解过模块化的发展的历史吗？</li><li>分别说说同步和异步模块化的应用场景，说下AMD异步模块化实现的原理？</li><li>如何将项目里面的所有的require的模块语法换成import的ES6的语法？</li><li>使用模块化加载时，模块加载的顺序是怎样的，如果不知道，根据已有的知识，你觉得顺序应该是怎么样的？</li></ul><blockquote><p>9.框架</p></blockquote><ul><li>使用过哪些框架？</li><li>zepto 和 jquery 是什么关系，有什么联系么？</li><li>jquery源码如何实现选择器的，为什么$取得的对象要设计成数组的形式，这样设计的目的是什么</li><li>jquery如何绑定事件，有几种类型和区别</li><li>什么是MVVM，MVC，MVP</li><li>Vue和Angular的双向数据绑定原理</li><li>Vue，Angular组件间通信以及路由原理</li><li>react和vue的生命周期</li><li>react和vue的虚拟dom以及diff算法</li><li>vue的observer，watcher，compile</li><li>react和angular分别用在什么样的业务吗？性能方面和MVC层面上的区别</li><li>jQuery对象和JS的Element有什么区别</li><li>jQuery对象是怎么实现的</li><li>jQuery除了它封装了一些方法外，还有什么值得我们去学习和使用的？</li><li>jQuery的$(‘xxx’)做了什么事情</li><li>介绍一下bootstrap的栅格系统是如何实现的</li></ul><blockquote><p>10.Nodejs</p></blockquote><ul><li>对nodejs有没有了解</li><li>Express 和 koa 有什么关系，有什么区别？</li><li>nodejs适合做什么样的业务？</li><li>nodejs与php，java有什么区别</li><li>Nodejs中的Stream和Buffer有什么区别？</li><li>node的异步问题是如何解决的？</li><li>node是如何实现高并发的？</li><li>说一下 Nodejs 的 event loop 的原理</li></ul><blockquote><p>11.数据结构</p></blockquote><ul><li>基本数据结构：（数组、队列、链表、堆、二叉树、哈希表等等）</li><li>8种排序算法，原理，以及适用场景和复杂度</li><li>说出越多越好的费波拉切数列的实现方法？</li></ul><blockquote><p>12.性能优化</p></blockquote><ul><li>cdn的用法是什么？什么时候用到？</li><li>浏览器的页面优化？</li><li>如何优化 DOM 操作的性能</li><li>单页面应用有什么SEO方案？</li><li>单页面应用首屏显示比较慢，原因是什么？有什么解决方案？</li></ul><blockquote><p>13.其他</p></blockquote><ul><li>正则表达式</li><li>前端渲染和后端渲染的优缺点</li><li>数据库的四大特性，什么是原子性，表的关系</li><li>你觉得前端体系应该是怎样的？</li><li>一个静态资源要上线，里面有各种资源依赖，你如何平稳上线</li><li>如果要你去实现一个前端模板引擎，你会怎么做</li><li>知道流媒体查询吗？</li><li>SEO</li><li>mysql 和 mongoDB 有什么区别？</li><li>restful的method解释</li><li>数据库知识、操作系统知识</li><li>click在ios上有300ms延迟，原因及如何解决</li><li>移动端的适配，rem+媒体查询/meta头设置</li><li>移动端的手势和事件；</li><li>unicode，utf8，gbk编码的了解，乱码的解决</li></ul><blockquote><p>14.开放性问题</p></blockquote><ul><li>你都看过什么书？最近在看什么书？</li><li>用过什么框架？有没有看过什么框架的代码？</li><li>有没有学过设计模式？</li><li>说一说观察者模式吧！能不能写出来？</li><li>你最大的优点是什么？那你最大的缺点呢？</li><li>你除了写博客还有什么输出？</li><li>现在你的领导给你了一份工作，要求你一个星期完成，但你看了需求以后估计需要3周才能完成，你该怎么办？</li><li>平时关注的前端技术</li><li>如何规划自己的职业生涯</li><li>项目过程中，有遇到什么问题吗？怎么解决的？</li><li>最近在研究哪方面的东西？</li><li>请介绍一项你最热爱、最擅长的专业领域，并且介绍的学习规划。</li><li>请介绍你参与的印象最深刻的一个项目，为什么？并且介绍你在项目中的角色和发挥的作用。</li></ul><blockquote><p>15.HR面</p></blockquote><ul><li>你为什么要学习前端？</li><li>你平时的是怎么学习前端的？有什么输出？</li><li>你觉得自己最好的项目是什么？</li><li>身边比较佩服的人有什么值得你学习的？你为什么没有跟他们一样？</li><li>同事的什么问题会让你接受不了</li><li>压力最大的事情是什么？</li><li>身边的朋友通常对你的评价是什么</li><li>喜欢什么样的工作氛围</li><li>如何看待加班</li><li>有没有对象</li><li>意向城市</li><li>其他的offer</li><li>为什么要录取你？</li><li>周末都会干什么？</li><li>未来职业规划</li></ul><p>   转自:<a href="https://segmentfault.com/a/1190000013857582" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013857582</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;知识点汇总&quot;&gt;&lt;a href=&quot;#知识点汇总&quot; class=&quot;headerlink&quot; title=&quot;知识点汇总&quot;&gt;&lt;/a&gt;知识点汇总&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;1.HTML&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;HTML5新特性，语义化&lt;/li&gt;
&lt;li&gt;浏览器的标准模式和怪异模式&lt;/li&gt;
&lt;li&gt;xhtml和html的区别&lt;/li&gt;
&lt;li&gt;使用data-的好处&lt;/li&gt;
&lt;li&gt;meta标签&lt;/li&gt;
&lt;li&gt;canvas&lt;/li&gt;
&lt;li&gt;HTML废弃的标签&lt;/li&gt;
&lt;li&gt;IE6 bug，和一些定位写法&lt;/li&gt;
&lt;li&gt;css js放置位置和原因&lt;/li&gt;
&lt;li&gt;什么是渐进式渲染&lt;/li&gt;
&lt;li&gt;html模板语言&lt;/li&gt;
&lt;li&gt;meta viewport原理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端" scheme="//tuspring.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="web" scheme="//tuspring.com/tags/web/"/>
    
      <category term="面试" scheme="//tuspring.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>如果有时光机的话，你想去未来还是回到过去？</title>
    <link href="//tuspring.com/2017/05/06/future_past/"/>
    <id>//tuspring.com/2017/05/06/future_past/</id>
    <published>2017-05-06T14:18:00.000Z</published>
    <updated>2018-03-31T17:51:00.325Z</updated>
    
    <content type="html"><![CDATA[<p>偶尔在知乎上看到一遍文章说如果有时光机，让你回到过去，但时间倒流几年。你就要损失未来相应年数的寿命，你愿意回到什么时候？</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;偶尔在知乎上看到一遍文章说如果有时光机，让你回到过去，但时间倒流几年。你就要损失未来相应年数的寿命，你愿意回到什么时候？&lt;/p&gt;
    
    </summary>
    
    
      <category term="过去" scheme="//tuspring.com/tags/%E8%BF%87%E5%8E%BB/"/>
    
      <category term="未来" scheme="//tuspring.com/tags/%E6%9C%AA%E6%9D%A5/"/>
    
      <category term="时光机" scheme="//tuspring.com/tags/%E6%97%B6%E5%85%89%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages绑定域名</title>
    <link href="//tuspring.com/2016/12/21/a-github-pages/"/>
    <id>//tuspring.com/2016/12/21/a-github-pages/</id>
    <published>2016-12-21T10:40:00.000Z</published>
    <updated>2018-03-30T15:49:37.418Z</updated>
    
    <content type="html"><![CDATA[<p>如果你用hexo-github搭了博客，又不想使用GitHub的xxx.github.io,  可以看下面怎么去绑定自己的域名。<br>（没有域名？<a href="https://wanwang.aliyun.com/?spm=5176.8142029.388261.550.a723381fLPFyjm" target="_blank" rel="noopener">点传送门</a>)</p><h6 id="1-向你的-Github-Pages-仓库添加一个CNAME-一定要大写-文件"><a href="#1-向你的-Github-Pages-仓库添加一个CNAME-一定要大写-文件" class="headerlink" title="1. 向你的 Github Pages 仓库添加一个CNAME(一定要大写)文件"></a>1. 向你的 Github Pages 仓库添加一个CNAME(一定要大写)文件</h6><p>其中只能包含一个顶级域名，像这样：<br>example.com  —-&gt;注意前面没有http://，也没有www，</p><p>还有你用 hexo 框架搭建博客并部署到 Github Pages 上，每次</p><blockquote><p>hexo g<br>hexo d</p></blockquote><a id="more"></a><p>后会把你的博客所在目录下 public 文件夹里的东西都推到 Github Pages 仓库上，并且把 CNAME 文件覆盖掉，解决这个问题可以直接把 CNAME 文件添加到 source 文件夹里，这样每次推的时候就不用担心仓库里的 CNAME 文件被覆盖掉了。</p><h6 id="2-向你的-DNS-配置中添加-3-条记录"><a href="#2-向你的-DNS-配置中添加-3-条记录" class="headerlink" title="2. 向你的 DNS 配置中添加 3 条记录"></a>2. 向你的 DNS 配置中添加 3 条记录</h6><p>@          A             192.30.252.153<br>@          A             192.30.252.154<br>www      CNAME           username.github.io.</p><p>用你自己的 Github 用户名替换 username<br>（其实www的方式，会先解析成<a href="http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。" target="_blank" rel="noopener">http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。</a><br>配置 DNS 推荐使用 DNSPOD 的服务，使用国外的 DNS 解析服务可能有被墙的风险。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你用hexo-github搭了博客，又不想使用GitHub的xxx.github.io,  可以看下面怎么去绑定自己的域名。&lt;br&gt;（没有域名？&lt;a href=&quot;https://wanwang.aliyun.com/?spm=5176.8142029.388261.550.a723381fLPFyjm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点传送门&lt;/a&gt;)&lt;/p&gt;
&lt;h6 id=&quot;1-向你的-Github-Pages-仓库添加一个CNAME-一定要大写-文件&quot;&gt;&lt;a href=&quot;#1-向你的-Github-Pages-仓库添加一个CNAME-一定要大写-文件&quot; class=&quot;headerlink&quot; title=&quot;1. 向你的 Github Pages 仓库添加一个CNAME(一定要大写)文件&quot;&gt;&lt;/a&gt;1. 向你的 Github Pages 仓库添加一个CNAME(一定要大写)文件&lt;/h6&gt;&lt;p&gt;其中只能包含一个顶级域名，像这样：&lt;br&gt;example.com  —-&amp;gt;注意前面没有http://，也没有www，&lt;/p&gt;
&lt;p&gt;还有你用 hexo 框架搭建博客并部署到 Github Pages 上，每次&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo g&lt;br&gt;hexo d&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="域名" scheme="//tuspring.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="hexo" scheme="//tuspring.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客hexo+github详细完整步骤</title>
    <link href="//tuspring.com/2016/12/20/a-tuspring-blog/"/>
    <id>//tuspring.com/2016/12/20/a-tuspring-blog/</id>
    <published>2016-12-20T06:48:00.000Z</published>
    <updated>2018-03-30T15:49:37.387Z</updated>
    
    <content type="html"><![CDATA[<p>参考了别人的一些方法，在总结了自己的安装部署过程。把完整步骤分享给大家，如果我的步骤不行，大家可以参考其他人的（有用过Git、node、GitHub的应该可以很快搞定，没用过的可能要花费点时间！）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">现在开始搭建属于你的博客.</span><br></pre></td></tr></table></figure><h2 id="一、第一步：下载安装Git"><a href="#一、第一步：下载安装Git" class="headerlink" title="一、第一步：下载安装Git"></a>一、第一步：下载安装Git</h2><blockquote><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git下载地址</a></p></blockquote><a id="more"></a><h3 id="Git安装步骤"><a href="#Git安装步骤" class="headerlink" title="Git安装步骤"></a>Git安装步骤</h3><p><img src="https://upload-images.jianshu.io/upload_images/1531909-4da9b2db5ad099b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/519" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/1531909-44bddccbb0bc44fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/483" alt=""></p><blockquote><p>然后一路默认</p></blockquote><h2 id="二、第二步：下载安装node-js"><a href="#二、第二步：下载安装node-js" class="headerlink" title="二、第二步：下载安装node.js"></a>二、第二步：下载安装node.js</h2><h3 id="1、node-js下载地址"><a href="#1、node-js下载地址" class="headerlink" title="1、node.js下载地址"></a>1、<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js下载地址</a></h3><p><img src="https://upload-images.jianshu.io/upload_images/1531909-acb3ca9d69e0037f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><blockquote><p>2、安装步骤：一路默认就行（安装路径根据自己需要更改）</p></blockquote><h2 id="三、第三步：安装hexo"><a href="#三、第三步：安装hexo" class="headerlink" title="三、第三步：安装hexo"></a>三、第三步：安装hexo</h2><blockquote><p>1、利用 npm 命令即可安装。在任意位置点击鼠标右键，选择Git Bash</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-ed306496f5c34312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/237" alt=""></p><blockquote><p>2、输入命令：npm install -g hexo</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-0b9d56643f6b27cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/648" alt=""></p><blockquote><p>注意：-g是指全局安装hexo。</p></blockquote><h2 id="四、第四步：初始化Hexo"><a href="#四、第四步：初始化Hexo" class="headerlink" title="四、第四步：初始化Hexo"></a>四、第四步：初始化Hexo</h2><blockquote><p>1、创建文件夹（我的是在E盘创建的Hexo–根据个人爱好创建博客文件夹）<br><img src="https://upload-images.jianshu.io/upload_images/1531909-b4cfc9da3f2063b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/650" alt=""></p></blockquote><blockquote><p>2、在Hexo文件下，右键运行Git Bash，输入命令：hexo init<br>（这里可能时间会长些，要耐心等待）<br><img src="https://upload-images.jianshu.io/upload_images/1531909-f6ae9b7089741c89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p></blockquote><blockquote><p>初始化成功后生成的一些列文件,如下<br><img src="https://upload-images.jianshu.io/upload_images/1531909-d0452912537c03e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/658" alt=""></p></blockquote><blockquote><p>3、在_config.yml,进行基础配置 (在你创建的博客文件夹（hexo）下的_config.yml文件)</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-cd5743eda172deca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/663" alt=""></p><blockquote><p>其中可以在这里<a href="https://hexo.io/themes/" target="_blank" rel="noopener">浏览更多主题</a>，然后在Hexo文件夹下 Git Bash(在hexo文件夹下鼠标右键就可以看到GitBash，点击打开)</p></blockquote><blockquote><p>输入命令：git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next（next为主题名字），来获得更多主题(我现在在用的主题<a href="https://github.com/ShanaMaid/hexo-theme-shana" target="_blank" rel="noopener">shana</a>)</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-c428c38d5b6f608d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/537" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/1531909-9e10141923fcdf7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/489" alt=""></p><blockquote><p>4、本地浏览博客<br> 分别输入 如下命令：<br>     hexo g<br>     hexo s</p></blockquote><blockquote><p> <a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令</a></p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-0501276ece21c570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/566" alt=""></p><h5 id="在浏览器输入：localhost：4000-，就可以进行访问，效果如下："><a href="#在浏览器输入：localhost：4000-，就可以进行访问，效果如下：" class="headerlink" title="在浏览器输入：localhost：4000 ，就可以进行访问，效果如下："></a>在浏览器输入：localhost：4000 ，就可以进行访问，效果如下：</h5><p><img src="https://upload-images.jianshu.io/upload_images/1531909-4f9a111a4f87ff63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><h4 id="5、写文章"><a href="#5、写文章" class="headerlink" title="5、写文章"></a>5、写文章</h4><blockquote><p>在E:\Hexo\source_posts文件下，新建.md文件就可以写文章<br><img src="https://upload-images.jianshu.io/upload_images/1531909-f369abde30af73e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/478" alt=""></p></blockquote><blockquote><hr><h2 id="title-我的博客"><a href="#title-我的博客" class="headerlink" title="title: 我的博客"></a>title: 我的博客</h2></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-a55880ce3bb59600.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/307" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/1531909-3b9c7f217892c046.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><h2 id="五、部署到Github上"><a href="#五、部署到Github上" class="headerlink" title="五、部署到Github上"></a>五、部署到Github上</h2><blockquote><p>1、申请Github账号，（注意别忘了进行账号邮箱验证）<br>2.new repository</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-8decffce7d3866b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/494" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/1531909-d3da80e668341305.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/469" alt=""></p><blockquote><p>记得名字要一致。否则部署上GitHub的博客无法正常显示</p></blockquote><blockquote><p>然后点击<br><img src="https://upload-images.jianshu.io/upload_images/1531909-fe29bad673d85f37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/246" alt=""></p></blockquote><blockquote><p>3、在_config.yml进行配置 (注意要保存, 记得要有空格否则报错)<br><img src="https://upload-images.jianshu.io/upload_images/1531909-d0fc558c749b5569.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p></blockquote><blockquote><p> 4、安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>自动部署发布工具</p></blockquote><blockquote><p>   npm install hexo-deployer-git  –save</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1531909-fb7e657ad2729c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/354" alt=""></p><blockquote><p>5、发布到Github<br>    输入如下命令：hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p></blockquote><p> <img src="https://upload-images.jianshu.io/upload_images/1531909-72b3c30ffbfb1210.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/274" alt=""><br> <img src="https://upload-images.jianshu.io/upload_images/1531909-5fdbcdab2249c01e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/506" alt=""></p><blockquote><p>第一次发布需要验证github账号 (部署时可能还会提示你全局绑定github用户名和邮箱)<br> <img src="https://upload-images.jianshu.io/upload_images/1531909-1f99441c5f2e0cfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/359" alt=""></p></blockquote><blockquote><p>发布成功后，我们在仓库中看到这个<br> <img src="https://upload-images.jianshu.io/upload_images/1531909-eeae3f8de4041eff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p></blockquote><blockquote><p>6、测试访问<br>在浏览器输入：<a href="https://tuspring.github.io/" target="_blank" rel="noopener">https://tuspring.github.io/</a> (你的repository)</p></blockquote><p> <img src="https://upload-images.jianshu.io/upload_images/1531909-a771d32449cbd5c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最后，搭建完毕！ 噢耶</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考了别人的一些方法，在总结了自己的安装部署过程。把完整步骤分享给大家，如果我的步骤不行，大家可以参考其他人的（有用过Git、node、GitHub的应该可以很快搞定，没用过的可能要花费点时间！）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;现在开始搭建属于你的博客.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;一、第一步：下载安装Git&quot;&gt;&lt;a href=&quot;#一、第一步：下载安装Git&quot; class=&quot;headerlink&quot; title=&quot;一、第一步：下载安装Git&quot;&gt;&lt;/a&gt;一、第一步：下载安装Git&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://gitforwindows.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="//tuspring.com/tags/hexo/"/>
    
      <category term="博客" scheme="//tuspring.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
